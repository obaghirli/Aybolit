# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-13 04:29
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('password', models.CharField(max_length=300)),
                ('email', models.CharField(max_length=150)),
                ('is_doc', models.BooleanField(default=False)),
                ('organisation', models.CharField(blank=True, default='', max_length=300)),
                ('rating', models.PositiveIntegerField(blank=True, default=0)),
                ('asked_question_count', models.PositiveIntegerField(blank=True, default=0)),
                ('reply_count', models.PositiveIntegerField(blank=True, default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_code', models.CharField(blank=True, max_length=6)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('last_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('rating', models.PositiveIntegerField(blank=True, default=0)),
                ('view', models.PositiveIntegerField(blank=True, default=0)),
                ('areas', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=1000)),
                ('keywords', models.CharField(max_length=300)),
                ('reply_count', models.PositiveIntegerField(blank=True, default=0)),
                ('feed_group', models.CharField(blank=True, default='N', max_length=1)),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('last_edited', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('rating', models.PositiveIntegerField(blank=True, default=0)),
                ('in_reply_to_id', models.PositiveIntegerField()),
                ('reply', models.CharField(max_length=1000)),
                ('question', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Question')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='preferences',
            field=models.ManyToManyField(default=None, to='app.Preference'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
